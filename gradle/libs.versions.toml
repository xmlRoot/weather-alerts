 [versions]
kotlinVersion = "1.9.25"
kotlinSerialization = "1.7.3"
assertJ = "3.26.3"
junit = "5.11.3"
faker = "2.4.2"
mockitoKotlin = "5.4.0"
mockitoJunit = "5.14.2"
testContainer = "1.20.4"
springBoot = "3.4.0"
kotestVersion="5.9.1"
jvmVersion="21"

[libraries]
kotlin-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinSerialization" }

kotest-core = { module = "io.kotest:kotest-runner-junit5-jvm", version.ref = "kotestVersion"  }
kotest-assertions = { module = "io.kotest:kotest-assertions-core-jvm", version.ref = "kotestVersion" }
kotest-property = { module = "io.kotest:kotest-property-jvm", version.ref = "kotestVersion" }
kotest-datest = { module = "io.kotest:kotest-framework-datatest", version.ref = "kotestVersion" }

# Spring
spring-configuration-processor = {  module= "org.springframework.boot:spring-boot-configuration-processor", version.ref= "springBoot" }

# Testing {
junit-bom = { module = "org.junit:junit-bom", version.ref="junit" }
junit-mockito = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mockitoJunit" }

assertj = { module = "org.assertj:assertj-core", version.ref = "assertJ" }
faker = { module = "net.datafaker:datafaker", version.ref = "faker" }
mockito = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockitoKotlin" }
testContainers-bom = { module="org.testcontainers:testcontainers-bom", version.ref = "testContainer" }

[plugins]
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlinVersion" }